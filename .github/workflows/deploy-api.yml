name: Deploy Spring Boot Backend

on:
  push:
    branches: [ master ]   # <— anpassen, falls du einen anderen Branch nutzt

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout
      - name: Checkout
        uses: actions/checkout@v4

      # 2. JDK installieren
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      # 3. Build JAR
      - name: Build with Maven
        run: mvn -B clean package -DskipTests

      # 4. SSH Key hinzufügen
      - name: Add SSH key
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Add known_hosts
        run: ssh-keyscan -H ${{ secrets.SSH_HOST }} >> ~/.ssh/known_hosts

      # 5. Upload + Restart
      - name: Deploy JAR
        run: |
          # Variablen
          APP_NAME=daz-api
          RELEASE_DIR=/opt/lingudisc/api/releases/$(date +%Y%m%d%H%M%S)
          CURRENT_DIR=/opt/lingudisc/api/current
          REMOTE_USER=${{ secrets.SSH_USER }}
          REMOTE_HOST=${{ secrets.SSH_HOST }}
          JAR_FILE=$(ls target/*.jar | head -n1)

          echo "Release dir: $RELEASE_DIR"
          
          # Release-Ordner anlegen
          ssh $REMOTE_USER@$REMOTE_HOST "mkdir -p $RELEASE_DIR"

          # JAR hochladen
          scp "$JAR_FILE" $REMOTE_USER@$REMOTE_HOST:$RELEASE_DIR/app.jar

          # Symlink setzen
          ssh $REMOTE_USER@$REMOTE_HOST "ln -sfn $RELEASE_DIR $CURRENT_DIR"

          # Falls alter Prozess läuft -> killen
          ssh $REMOTE_USER@$REMOTE_HOST "
            if [ -f $CURRENT_DIR/app.pid ]; then
              OLD_PID=\$(cat $CURRENT_DIR/app.pid)
              if kill -0 \$OLD_PID 2>/dev/null; then
                echo 'Stopping old process...'
                kill \$OLD_PID
                sleep 3
              fi
              rm -f $CURRENT_DIR/app.pid
            fi
          "

          # Neues JAR starten
          ssh $REMOTE_USER@$REMOTE_HOST "
            nohup java -jar $CURRENT_DIR/app.jar > $CURRENT_DIR/app.log 2>&1 &
            echo \$! > $CURRENT_DIR/app.pid
          "
